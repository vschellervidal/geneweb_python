name: Issue → Branch

on:
  issues:
    types: [opened, labeled]

permissions:
  contents: write
  issues: write

jobs:
  create-branch:
    if: github.event.action == 'opened' || (github.event.action == 'labeled' && github.event.label.name == 'create-branch')
    runs-on: ubuntu-latest
    steps:
      - name: Create branch from default branch
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            if (issue.pull_request) return;

            const owner = context.repo.owner;
            const repo  = context.repo.repo;

            // slug du titre
            const slug = issue.title
              .toLowerCase()
              .replace(/[^\w\- ]+/g, '')   // enlève ponctuation
              .trim()
              .replace(/\s+/g, '-')
              .slice(0, 40);               // limite longueur

            const branch = `issue-${issue.number}${slug ? '-' + slug : ''}`;

            // base = branche par défaut (ex: main)
            const { data: repoData } = await github.rest.repos.get({ owner, repo });
            const base = repoData.default_branch;

            const { data: refData } = await github.rest.git.getRef({ owner, repo, ref: `heads/${base}` });
            const sha = refData.object.sha;

            // crée la branche si pas déjà là
            try {
              await github.rest.git.createRef({ owner, repo, ref: `refs/heads/${branch}`, sha });
            } catch (e) {
              if (e.status !== 422) throw e; // 422 = already exists
            }

            await github.rest.issues.createComment({
              owner, repo, issue_number: issue.number,
              body:
                `✅ Branche \`${branch}\` créée depuis \`${base}\`.\n\n` +
                `**Bosser dessus :**\n\`\`\`bash\n` +
                `git fetch\n` +
                `git switch ${branch}\n# ... commits ...\n` +
                `git push -u origin ${branch}\n\`\`\`\n` +
                `Le premier push créera automatiquement une Pull Request liée au ticket.`
            });
            try {
              await github.rest.issues.addLabels({ owner, repo, issue_number: issue.number, labels: ['in progress'] });
            } catch {}
